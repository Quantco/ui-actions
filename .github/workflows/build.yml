name: Build
on:
  push:
    branches:
      - main
      - tag-action # TODO: remove when done testing

jobs:
  commit-version-metadata:
    name: Commit changes of version-metadata build output
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: version-metadata
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 6.32.2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm

      - run: pnpm install
      - run: pnpm lint
      - run: pnpm build

      - name: Commit changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git pull # the other action might have created a commit already, better pull :)
          git add --force dist # have to use --force because dist is in .gitignore
          git commit -m "[auto] build version-metadata: update compiled version" || true # don't fail if there are no changes
          git push

  commit-publish:
    name: Commit changes of publish build output
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: publish
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 6.32.2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm

      - run: pnpm install
      - run: pnpm lint
      - run: pnpm build
      
      - name: Commit changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git pull # the other action might have created a commit already, better pull :)
          git add --force dist # have to use --force because dist is in .gitignore
          git commit -m "[auto] build publish: update compiled version" || true # don't fail if there are no changes
          git push

  push-tags:
    name: Push tags
    runs-on: ubuntu-latest
    needs: [commit-version-metadata, commit-publish]
    steps:
      - uses: actions/checkout@v3

      - uses: Quantco/ui-actions/version-metadata@fab1ae8578aa96e153821d4927b8e27975860570
        id: version-metadata
        with:
          # the version of both actions should be kept in sync
          # this is enforced by the sanity check step below
          file: version-metadata/package.json
          # TODO: remove this when the repo is public
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: Quantco/ui-actions/version-metadata@fab1ae8578aa96e153821d4927b8e27975860570
        id: version-metadata-sanity-check
        with:
          file: publish/package.json
          # TODO: remove this when the repo is public
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Sanity version check
        if: steps.version-metadata.outputs.newVersion != steps.version-metadata-sanity-check.outputs.newVersion
        run: |
          echo "version-metadata and publish version do not match"
          
          echo "version-metadata:"
          echo "old:     '${{ steps.version-metadata.outputs.oldVersion }}'"
          echo "new:     '${{ steps.version-metadata.outputs.newVersion }}'"
          echo "changed: '${{ steps.version-metadata.outputs.changed }}'"
          echo "type:    '${{ steps.version-metadata.outputs.type }}'"

          echo "publish:"
          echo "old:     '${{ steps.version-metadata-sanity-check.outputs.oldVersion }}'"
          echo "new:     '${{ steps.version-metadata-sanity-check.outputs.newVersion }}'"
          echo "changed: '${{ steps.version-metadata-sanity-check.outputs.changed }}'"
          echo "type:    '${{ steps.version-metadata-sanity-check.outputs.type }}'"

          exit 1

      - name: Configure git and pull auto build commits
        run: |
          # configure git to use the github-actions[bot] user
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          # pull auto build commits
          git pull

      - name: Push v(x.x.x) tag
        if: steps.version-metadata.outputs.changed == 'true'
        run: |
          version="${{ steps.version-metadata.outputs.newVersion }}"

          git tag "debug-v${version}"         # TODO remove the "debug-" prefix
          git push origin "debug-v${version}" # TODO remove the "debug-" prefix

          echo "pushed v${version} tag" >> $GITHUB_STEP_SUMMARY

      - name: Update v(x) tag (move)
        if: steps.version-metadata.outputs.changed == 'true' && steps.version-metadata.outputs.type != 'major'
        run: |
          # compute major version
          version="${{ steps.version-metadata.outputs.newVersion }}"
          major="${version%%.*}" # see https://www.linuxjournal.com/article/8919 for an explanation of this bash magic

          # delete the v(x) tag locally and on the remote
          git tag -d "debug-v${major}" || echo "couldn't delete tag v${major} locally, maybe it didn't exist before, continuing.." # TODO: remove the "debug-" prefix
          git push origin ":refs/tags/debug-v${major}" || echo "couldn't delete tag v${major} remotely, maybe it didn't exist before, continuing.." # TODO: remove the "debug-" prefix

          git tag "debug-v${major}"         # TODO: remove the "debug-" prefix
          git push origin "debug-v${major}" # TODO: remove the "debug-" prefix

          echo "moved v${major} tag to v${version}" >> $GITHUB_STEP_SUMMARY

      - name: Update v(x) tag (major version bump)
        if: steps.version-metadata.outputs.changed == 'true' && steps.version-metadata.outputs.type == 'major'
        run: |
          # compute major version
          version="${{ steps.version-metadata.outputs.newVersion }}"
          major="${version%%.*}"

          # git tag "debug-v${major}"         # TODO: remove the "debug-" prefix
          # git push origin "debug-v${major}" # TODO: remove the "debug-" prefix

          echo "pushed v${major} tag" >> $GITHUB_STEP_SUMMARY

      - name: Report no changes
        if: steps.version-metadata.outputs.changed == 'false'
        run: |
          echo "No version bump detected" >> $GITHUB_STEP_SUMMARY
